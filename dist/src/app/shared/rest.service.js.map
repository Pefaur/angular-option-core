{"version":3,"sources":["../../../../src/app/shared/rest.service.ts"],"names":[],"mappings":"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","file":"rest.service.js","sourceRoot":"","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { Observable } from 'rxjs/Observable';\n\nimport { MODULE_CONFIG, OptionCoreConfig } from '../option-core.config';\n\nimport { OptResponse } from './response';\nimport { OptEntity } from './entity.model';\nimport { OptAuthService } from './auth.service';\nimport { FilterFactory, FiltersOptions } from './filter';\nimport { OptFilteredResponse } from './filtered-response';\n\n\nexport abstract class OptRestService {\n  protected defaultHeaders: Headers;\n  protected apiVersion = 'v1.0';\n  protected apiUrl: string;\n\n  constructor( protected config: OptionCoreConfig,\n              protected auth: OptAuthService,\n              protected http: Http) {\n    this.defaultHeaders = new Headers({\n      'Content-Type': 'application/json'\n    });\n    this.apiUrl = config.apiUrl;\n  }\n\n  abstract getEntityBaseUrl(): string;\n\n  abstract createEntity(json: any): OptEntity;\n\n  createFilteredResponse(response: any): OptFilteredResponse {\n    const entities = response.json().result.map((item: JSON) => {\n      return this.createEntity(item);\n    });\n    return new OptFilteredResponse(response, entities);\n  }\n\n  getBaseUrl(): string {\n    return this.apiUrl + '/' + this.apiVersion;\n  }\n\n  getHeaders(): Headers {\n    const headers = Object.assign(this.defaultHeaders.toJSON(), {\n      'Authorization': this.auth.getToken()\n    });\n    return new Headers(headers);\n  }\n\n  getList(): Observable<OptEntity[]> {\n    return this.http\n      .get(this.getEntityBaseUrl() + '?limit=1000', {headers: this.getHeaders()})\n      .map(response => {\n        return response.json().result.map((item: JSON) => {\n          return this.createEntity(item);\n        });\n      })\n      .catch(this.handleError);\n  }\n\n  // @example filtersOptions: FiltersOptions = {\n  //   filterBy: new FilterBy('name', 'orellana', OperatorOptions.Like),\n  //   select: new Select('name'),\n  //   offset: new Offset(0),\n  //   limit: new Limit(10),\n  //   orderBy: new OrderBy('name', OrderByOptions.Desc),\n  //   search: new Search('orellana'),\n  //   extra: new Extra([\n  //     new Filter('practitioner', 'orellana'),\n  //     new Filter('from', '2017-09-15'),\n  //     new Filter('to', '2017-09-18')\n  //   ]),\n  // };\n  getFilteredList(filtersOptions: FiltersOptions): Observable<OptFilteredResponse> {\n    const filterFactory = new FilterFactory(this.getEntityBaseUrl());\n    const url = filterFactory.generateUrl(filtersOptions);\n\n    return this.http.get(url, {headers: this.getHeaders()})\n      .map(response => this.createFilteredResponse(response))\n      .catch(this.handleError);\n  }\n\n  getOne(id: number): Observable<OptEntity> {\n    const url = this.getEntityBaseUrl() + '/' + id;\n    return this.http.get(url, {headers: this.getHeaders()})\n      .map(response => this.createEntity(response.json().result))\n      .catch(this.handleError);\n  }\n\n  remove(id: number): Observable<OptResponse> {\n    const url = this.getEntityBaseUrl() + '/' + id;\n    return this.http.delete(url, {headers: this.getHeaders()})\n      .map(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  create(entity: OptEntity): Observable<OptResponse> {\n    return this.http\n      .post(this.getEntityBaseUrl(), JSON.stringify(entity.toForm()), {headers: this.getHeaders()})\n      .map(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  update(entity: OptEntity): Observable<OptResponse> {\n    const url = this.getEntityBaseUrl() + '/' + entity.id;\n    return this.http\n      .patch(url, JSON.stringify(entity.toForm()), {headers: this.getHeaders()})\n      .map(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  change(entity: OptEntity): Observable<OptResponse> {\n    const url = this.getEntityBaseUrl() + '/' + entity.id;\n    return this.http\n      .put(url, JSON.stringify(entity.toForm()), {headers: this.getHeaders()})\n      .map(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  protected handleError(error: Response): Observable<any> {\n    console.error('An error occurred', error);\n    return Observable.throw(OptResponse.fromJSON(error));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG, ] }, ]},\n{type: OptAuthService, },\n{type: Http, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}