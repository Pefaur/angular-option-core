{"version":3,"sources":["../../../../src/app/common/rest.service.ts"],"names":[],"mappings":"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","file":"rest.service.js","sourceRoot":"","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { API_URL } from './api-url.config';\n\nimport { OptResponse } from './response.model';\nimport { OptEntity } from './entity.model';\nimport { OptAuthService } from './auth.service';\n\n\nexport abstract class OptRestService {\n  protected defaultHeaders: Headers;\n  protected apiVersion = 'v1.0';\n\n  constructor( protected apiUrl: string, protected auth: OptAuthService, protected http: Http) {\n    this.defaultHeaders = new Headers({\n      'Content-Type': 'application/json'\n    });\n  }\n\n  abstract getEntityBaseUrl(): string;\n\n  abstract createEntity(json: any): OptEntity;\n\n  getBaseUrl(): string {\n    return this.apiUrl + '/' + this.apiVersion;\n  }\n\n  getHeaders(): Headers {\n    const headers = Object.assign(this.defaultHeaders.toJSON(), {\n      'Authorization': this.auth.getToken()\n    });\n    return new Headers(headers);\n  }\n\n  getList(): Promise<OptEntity[]> {\n    const self = this;\n    return this.http.get(this.getEntityBaseUrl(), {headers: this.getHeaders()})\n      .toPromise()\n      .then(function(response) {\n        return response.json().result.map(function(item: JSON) {\n          return self.createEntity(item);\n        });\n      })\n      .catch(this.handleError);\n  }\n\n  getOne(id: number): Promise<OptEntity> {\n    const url = this.getEntityBaseUrl() + '/' + id;\n    const self = this;\n    return this.http.get(url, {headers: this.getHeaders()})\n      .toPromise()\n      .then(response => self.createEntity(response.json().result))\n      .catch(this.handleError);\n  }\n\n  remove(id: number): Promise<OptResponse> {\n    const url = this.getEntityBaseUrl() + '/' + id;\n    return this.http.delete(url, {headers: this.getHeaders()})\n      .toPromise()\n      .then(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  create(entity: OptEntity): Promise<OptResponse> {\n    return this.http\n      .post(this.getEntityBaseUrl(), JSON.stringify(entity.toForm()), {headers: this.getHeaders()})\n      .toPromise()\n      .then(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  update(entity: OptEntity): Promise<OptResponse> {\n    const url = this.getEntityBaseUrl() + '/' + entity.id;\n    return this.http\n      .patch(url, JSON.stringify(entity.toForm()), {headers: this.getHeaders()})\n      .toPromise()\n      .then(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  change(entity: OptEntity): Promise<OptResponse> {\n    const url = this.getEntityBaseUrl() + '/' + entity.id;\n    return this.http\n      .put(url, JSON.stringify(entity.toForm()), {headers: this.getHeaders()})\n      .toPromise()\n      .then(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\n\n  protected handleError(error: Response): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(OptResponse.fromJSON(error));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [API_URL, ] }, ]},\n{type: OptAuthService, },\n{type: Http, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}