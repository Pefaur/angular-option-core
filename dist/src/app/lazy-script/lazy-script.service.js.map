{"version":3,"sources":["../../../../src/app/lazy-script/lazy-script.service.ts"],"names":[],"mappings":"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","file":"lazy-script.service.js","sourceRoot":"","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { MODULE_CONFIG, OptionCoreConfig } from '../option-core.config';\n\ndeclare let document: any;\n\n\nexport class OptLazyScriptService {\n\n  private scripts: any = {};\n\n  constructor( protected config: OptionCoreConfig) {\n    config.lazyScriptsStore.forEach((script: any) => {\n      this.scripts[script.name] = {\n        loaded: false,\n        src: script.src\n      };\n    });\n  }\n\n  load(...scripts: string[]) {\n    const promises: any[] = [];\n    scripts.forEach((script) => promises.push(this.loadScript(script)));\n    return Promise.all(promises);\n  }\n\n  loadScript(name: string) {\n    if (this.scripts[name].promise) {\n      return this.scripts[name].promise;\n    }\n\n    return this.scripts[name].promise = new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name].loaded) {\n        resolve({script: name, loaded: true, status: 'Already Loaded'});\n      } else {\n        // load script\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = this.scripts[name].src;\n        if (script.readyState) {  // IE\n          script.onreadystatechange = () => {\n            if (script.readyState === 'loaded' || script.readyState === 'complete') {\n              script.onreadystatechange = null;\n              this.scripts[name].loaded = true;\n              resolve({script: name, loaded: true, status: 'Loaded'});\n            }\n          };\n        } else {  // Others\n          script.onload = () => {\n            this.scripts[name].loaded = true;\n            resolve({script: name, loaded: true, status: 'Loaded'});\n          };\n        }\n        script.onerror = (error: any) => resolve({script: name, loaded: false, status: 'Loaded'});\n        document.getElementsByTagName('head')[0].appendChild(script);\n      }\n    });\n  }\n\n  isLoadedScript(name: string): boolean {\n    return !!this.scripts[name].loaded;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}