{"version":3,"sources":["../../../../src/app/user/user.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,EAAE,OAAA,EAAQ,MAAO,cAAA,CAAe;AACvC,OAAO,EAAE,cAAA,EAAe,MAAO,wBAAA,CAAyB;AACxD,OAAO,EAAE,WAAA,EAAY,MAAO,0BAAA,CAA2B;AAGvD;IAAoC,kCAAc;IAAlD;;IA4CA,CAAC;IAxCC,yCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,QAAQ,CAAC;IACtC,CAAC;IAED,qCAAY,GAAZ,UAAa,IAAS;QACpB,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,8BAAK,GAAL;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QACD,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;aAClE,SAAS,EAAE;aACX,IAAI,CAAC,UAAS,QAAa;YAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC;QAC/D,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAc,GAAd,UAAe,cAAsB,EAAE,WAAmB,EAAE,oBAA4B;QACtF,IAAM,IAAI,GAAG;YACX,WAAW,EAAE,cAAc;YAC3B,QAAQ,EAAE,WAAW;YACrB,oBAAoB,EAAE,oBAAoB;SAC3C,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC;aAClG,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAA9B,CAA8B,CAAC;aAChD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAOH,qBAAC;AAAD,CA5CA,AA4CC,CA5CmC,cAAc;;AAsC3C,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"user.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { OptUser } from './user.model';\nimport { OptRestService } from '../common/rest.service';\nimport { OptResponse } from '../common/response.model';\n\n\nexport class OptUserService extends OptRestService {\n\n  private user: OptUser;\n\n  getEntityBaseUrl(): string {\n    return this.getBaseUrl() + '/users';\n  }\n\n  createEntity(json: any): OptUser {\n    return new OptUser(json);\n  }\n\n  getMe(): Promise<OptUser> {\n    if (this.user) {\n      return Promise.resolve(this.user);\n    }\n    const self = this;\n    return this.http\n      .get(this.getEntityBaseUrl() + '/me', {headers: this.getHeaders()})\n      .toPromise()\n      .then(function(response: any) {\n        return self.user = self.createEntity(response.json().result);\n      })\n      .catch(this.handleError);\n  }\n\n  changePassword(actualPassword: string, newPassword: string, confirmationPassword: string) {\n    const body = {\n      oldPassword: actualPassword,\n      password: newPassword,\n      passwordConfirmation: confirmationPassword\n    };\n    return this.http\n      .post(this.getEntityBaseUrl() + '/me/password', JSON.stringify(body), {headers: this.getHeaders()})\n      .toPromise()\n      .then(response => OptResponse.fromJSON(response))\n      .catch(this.handleError);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}