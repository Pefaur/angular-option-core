{"version":3,"sources":["../../../../src/app/fake-backend/mock.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAG1D;IAA+B,6BAAQ;IAIrC,mBAAY,eAAuB;eACjC,kBAAM,IAAI,eAAe,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IACH,gBAAC;AAAD,CAPA,AAOC,CAP8B,QAAQ,GAOtC;;AAED;IACE,cAAsB,UAA0B;QAA1B,eAAU,GAAV,UAAU,CAAgB;IAChD,CAAC;IAID,0BAAW,GAAX,UAAY,eAAuB;QACjC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,IAAI,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,wBAAS,GAAT,UAAU,eAAuB;QAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;IAC5D,CAAC;IACH,WAAC;AAAD,CAbA,AAaC,IAAA","file":"mock.js","sourceRoot":"","sourcesContent":["import { Response, ResponseOptions } from '@angular/http';\nimport { MockConnection } from '@angular/http/testing';\n\nexport class MockError extends Response implements Error {\n  name: any;\n  message: any;\n\n  constructor(responseOptions: object) {\n    super(new ResponseOptions(responseOptions));\n  }\n}\n\nexport abstract class Mock {\n  constructor(protected connection: MockConnection) {\n  }\n\n  abstract requests(): boolean;\n\n  mockRespond(responseOptions: object): void {\n    this.connection.mockRespond(new Response(new ResponseOptions(responseOptions)));\n  }\n\n  mockError(responseOptions: object): void {\n    this.connection.mockError(new MockError(responseOptions));\n  }\n}\n"]}